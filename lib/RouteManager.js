// Generated by CoffeeScript 1.9.3
var EventEmitter, RouteItem, RouteManager, _, _path, fs,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

fs = require('fs-extra');

_ = require('lodash')._;

_path = require('path');

RouteItem = require('./RouteItem');

EventEmitter = require('events').EventEmitter;

RouteManager = (function(superClass) {
  'use strict';
  extend(RouteManager, superClass);

  RouteManager.prototype.routes = [];

  RouteManager.prototype._viewsDir = _path.join("" + (app_root || '.'), 'views');

  RouteManager.prototype._routesDir = _path.join("" + (app_root || '.'), 'routes');

  function RouteManager() {
    fs.ensureDir(this._viewsDir, (function(_this) {
      return function() {
        return fs.ensureDir(_this._routesDir, function() {
          return _this.load(function(e, routes) {
            if (e != null) {
              return;
            }
            _this.routes = routes;
            return _this.emit('initialized', _this.routes);
          });
        });
      };
    })(this));
  }

  RouteManager.prototype.getRoute = function(route) {
    return _.where(this.routes, {
      route_file: route
    });
  };

  RouteManager.prototype.createRoute = function(routing, callback) {
    return (new RouteItem(routing)).save((function(_this) {
      return function() {
        return callback != null ? callback.apply(_this, arguments) : void 0;
      };
    })(this));
  };

  RouteManager.prototype.destroyRoute = function(route, callback) {};

  RouteManager.prototype.listRoutes = function() {
    return this.routes;
  };

  RouteManager.prototype.load = function(callback) {
    var _routes, e;
    try {
      _routes = this.getpaths(this._viewsDir);
    } catch (_error) {
      e = _error;
      return typeof callback === "function" ? callback(e) : void 0;
    }
    return typeof callback === "function" ? callback(null, _routes) : void 0;
  };

  RouteManager.prototype.formatRoute = function(fname) {
    return fname.replace(/index/, '/').replace(/^(\/?[a-zA-Z0-9_]{1,}\/+)+(edit|index|show)$/, "$1:id/$2").replace(/\/\//, '/').replace(/^([a-zA-Z0-9_])+\/+$/, '$1');
  };

  RouteManager.prototype.getpaths = function(dir) {
    var e, file, i, itemName, len, list, name, p, paths, routeItem, stat;
    paths = [];
    if ((list = fs.readdirSync(dir)).length) {
      for (i = 0, len = list.length; i < len; i++) {
        name = list[i];
        if ((name.match(/^\./)) != null) {
          continue;
        }
        file = _path.join(dir, name);
        try {
          stat = fs.statSync(file);
        } catch (_error) {
          e = _error;
          throw new Error(e);
          return false;
        }
        if (stat != null ? stat.isDirectory() : void 0) {
          if (_path.basename(file).match(/^_+/)) {
            continue;
          }
          paths.push(this.getpaths(file));
        } else {
          itemName = name.split('.')[0];
          if ((name.match(/^[^_]+[a-zA-Z0-9_\.]+\.jade+$/)) == null) {
            continue;
          }
          p = new RegExp(this._viewsDir.replace(/\//, '\/'));
          routeItem = {
            name: _.camelCase(itemName),
            file_type: 'jade',
            query_method: itemName === 'index' ? 'find' : 'findOne',
            route_file: "" + (_path.join(this._routesDir, _path.basename(dir).replace(/views+/, ''), itemName)),
            template_file: _path.join(dir.split(/views+/).pop(), itemName),
            route: this.formatRoute(_path.join(_path.basename(dir).replace(/views+/, ''), itemName))
          };
          if (!routeItem.route_file.match(/^\.?\/+/)) {
            routeItem.route_file = "./" + routeItem.route_file;
          }
          paths.push(routeItem);
        }
      }
    }
    return _.flatten(paths);
  };

  RouteManager.getInstance = function() {
    return this.__instance != null ? this.__instance : this.__instance = new this;
  };

  return RouteManager;

})(EventEmitter);

module.exports = RouteManager;
